package com.carter.leetcode;

import java.util.HashSet;
import java.util.Set;

public class Item1035_1 {
    private int max;
    private Set<String> history = new HashSet<>();

    public static void main(String[] args) {
//        System.out.println(new Item1035_1().maxUncrossedLines(new int[]{2, 5, 1, 2, 5}, new int[]{10, 5, 2, 1, 5, 2}));
//        System.out.println(new Item1035_1().maxUncrossedLines(new int[]{2, 1}, new int[]{1, 2, 1, 3, 3, 2}));
//        System.out.println(new Item1035_1().maxUncrossedLines(new int[]{3, 2}, new int[]{2, 2, 2, 3}));
        System.out.println(new Item1035_1().maxUncrossedLines(new int[]{428, 326, 1340, 161, 1900, 1875, 1506, 1321, 779, 1843, 1937, 661, 323, 307, 1661, 1837, 1184, 1140, 342, 477, 733, 75, 1271, 1504, 1242, 1340, 455, 1216, 79, 1470, 1128, 1352, 1458, 272, 845, 1190, 1594, 452, 1367, 1649, 428, 1781, 514, 1832, 1118, 1888, 1539, 1065, 230, 671, 1538, 305, 731, 1429, 1155, 342, 1383, 441, 186, 922, 1517, 998, 1618, 1875, 591, 640, 649, 683, 337, 1130, 514, 733, 1470, 1789, 1449, 1240, 1914, 1390, 818, 1309, 122, 671, 844, 445, 445, 1271, 998, 1649, 1015, 1147, 1555, 1232, 1362, 1171, 1575, 308, 308, 651, 1750, 128, 1860, 238, 1812, 1462, 1555, 40, 642, 241, 1609, 1865, 663, 342, 578, 1903, 689, 367, 452, 1900, 75, 317, 1690, 1364, 1194, 1025, 997, 1847, 844, 1538, 418, 660, 1937, 1947, 1030, 102, 1157, 1398, 1322, 1055, 1434, 555, 272, 1022, 932, 1118, 600, 1465, 1631, 982, 1302, 690, 585, 940, 1902, 65, 15, 1345, 1932, 445, 1875, 1609, 646, 91, 1050, 1458, 1104, 1316, 469, 469, 838, 1002, 1447, 1538, 1318, 1006, 591, 1618, 1539, 515, 186, 1952, 374, 946, 169, 1153, 71, 1531, 1349, 1155, 343, 1853, 858, 220, 1756, 578, 877, 1515, 589, 1158, 885, 699},
                new int[]{1306,845,932,450,1339,740,410,331,1859,674,996,1953,1758,733,781,515,896,1463,1980,1632,198,1484,1161,307,1517,1974,1000,1470,1184,663,206,1800,967,337,166,881,858,1571,1099,1145,257,387,1190,654,534,38,284,1631,1790,305,1386,10,391,1193,651,418,838,109,496,75,1927,1837,327,393,1903,1208,1618,1832,209,69,367,1571,1787,1405,683,1723,1794,1824,163,221,1302,457,391,331,1463,169,198,317,585,731,169,241,459,1800,582,854,323,877,221,1261,1883,1157,241,733,1352,1775,1842,774,1345,197,1853,1183,1747,591,160,582,176,1952,555,1968,1449,585,918,557,589,1902,1902,1362,1231,1050,1859,667,445,477,818,1261,1916,1446,1158,38,1731,1362,715,279,543,1736,308,1807,1022,689,1193,1661,496,1175,1127,1642,1723,1002,1692,844,798,1041,1594,220,498,471,1161,1682,1575,1974,774,1065,1094,1161,1158,446,1231,853,818,1665,1504,858,1859,1271,647,1460,1053,307,818,1345,1184,331,1213,1130,161,1322,1477,1340,1325,122}));
    }
    public int maxUncrossedLines(int[] nums1, int[] nums2) {
        match(nums1, nums2, 0, 0, 0);
        return max;
    }

    private void match(int[] nums1, int[] nums2, int i, int j, int matchCount) {
        String key = i + "-" + j + "-" + matchCount;
        if (history.contains(key)) {
            return;
        }
        history.add(key);
        if (i == nums1.length || j == nums2.length) {
            return;
        }
        if (nums1[i] == nums2[j]) {
            //选择匹配
            match(nums1, nums2, i + 1, j + 1, matchCount + 1);
            max = Math.max(max, matchCount + 1);
        }
        //不匹配或者选择不匹配
        //数组1向前一步
        match(nums1, nums2, i + 1, j, matchCount);
        //数组2向前一步
        match(nums1, nums2, i, j + 1, matchCount);
    }
}
